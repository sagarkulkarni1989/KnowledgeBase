I am Sagar. I am having 9 years of experience in IT industry with various tools and technologie Build and deployment using devops tools,Release Managment and TEMS Consultant.

Well 
About My Project
Currently i am workin on one of the candian retail project and leading two modules.
1] Application Build and deployment using GIT Jenkins ,tomcat and Weblogic and Appdynamics for Server health check Monitoring. 
2] Application health check Monitoring Using Katalon Studio and Jenkins pipeline , JIRA for defect tracking

Roles and responsibilities
Daily Goal : To all environments should be in running and healty state with minimum impact to ongoing project deadlines.
As our team is owning environment management so all related activities comes unders our bucket.
Environment provisioning, setup for build and deployment.
Environment baselining after every enterprise releases. 
Environment sanity before handover to upcoming releases.
Daily environment issue - jenkins build logs analysis, Test report analysis, application logs analysis, based on that coordinate with respective team to fix those on priority.
decommissioning the unused instances.
Part of application scrum calls.
We are following all ITIL principles and agile methodologies.

From Security and quality check

develop applications based on secure coding guidelines.  improper error handling
Standardized coding practices
Code Quality Assurance tool: SonarQube, 
Source code Management team: Maintain Access , Pull request
Appropriate use of strong encryption for data in databases
Masking confidential data that needs to be viewed in part
Support for strong passwords and two-factor authentication where appropriate
Role-based access control and revocation of rights, with clear roles mapped to permissions.

Appdynmics 
AppDynamics is a leading Application Performance Management (APM) product. It is a tool that monitors your Application Infrastructure and gives you code level visibility.
Overall Application Performance 
Application Infrastrucure performance 
Business transaction Performance 
Application performance monitoring (APM) is a section of IT that ensures applications are performing as expected. ... Application monitoring tools give administrators the information they need to quickly figure out issues that negatively impact an application's performance


Apart from this i am doing , release management tasks, Weekly report preparation, present with client. part of process enhancement team to find out the area for where we can do improvment.

Conunious Delivery 
After the CI process, deploying on a prod like env and running automation tests to ensure the build is ready for release.
Ensures the build is always in a deployable 

Continuous Deployment 
Automated Deployment to prod. Every change that passes through Automation Tests is deployed to production 


Dev -Test - Deploy 
Maven for Code build
SonarQube for Code Quality Check 
Checkin code - Git - Pull code - dploy on test environment - Prod 




Qualys VM(Vulnerability Management) is a cloud-based service that gives you immediate, global visibility into where your IT systems might be vulnerable to the latest Internet threats and how to protect them. It helps you to continuously identify threats and monitor unexpected changes in your network before they turn into breaches










********************************************************
************************Why we hire you ********************8
Why do you want to leave current job
Willingness to develop new Skills 
Plan to learn, grow and explore new opportunities 
Desire to get more new responsibilities and job role 
**********************************************************************


********************************************************************************************************

Devops 
DevOps is a culture that allows the development and the operations team to work together. This results in continuous development, testing, integration, deployment, and monitoring of the software throughout the lifecycle.

Agile is a software development methodology that focuses on iterative, incremental, small, and rapid releases of software, along with customer feedback. It addresses gaps and conflicts between the customer and developers.

*******************************************************************************************************
The various phases of the DevOps lifecycle are as follows:

Plan - Initially, there should be a plan for the type of application that needs to be developed. Getting a rough picture of the development process is always a good idea.
Code - The application is coded as per the end-user requirements. 
Build - Build the application by integrating various codes formed in the previous steps.
Test - This is the most crucial step of the application development. Test the application and rebuild, if necessary.
Integrate - Multiple codes from different programmers are integrated into one.
Deploy - Code is deployed into a cloud environment for further usage. It is ensured that any new changes do not affect the functioning of a high traffic website.
Operate - Operations are performed on the code if required.
Monitor - Application performance is monitored. Changes are made to meet the end-user requirements.

The following standard approaches can be used to implement DevOps in a specific project:

Stage 1
An assessment of the existing process and implementation for about two to three weeks to identify areas of improvement so that the team can create a road map for the implementation.

Stage 2
Create a proof of concept (PoC). Once it is accepted and approved, the team can start on the actual implementation and roll-out of the project plan.

Stage 3
The project is now ready for implementing DevOps by using version control/integration/testing/deployment/delivery and monitoring followed step by step.

***********************************************************************************************************************
https status :

Status codes are issued by a server in response to a client request made to the server
 1xx  Informational 
 2xx  Success
 3xx  Redirectional 
 4xx  client error 
	400 bad request
	401 unauthorized 
	403 forbidden
	404 not found 
 500xx internal server error 

***************************************************************************************************************************

Support for strong passwords and two-factor authentication where appropriate
Role-based access control and revocation of rights, with clear roles mapped to permissions. 
Event logs and audit trails available only to system administrators and protected from
unauthorized modifications.
Source code managment 
preventing external threats to maintain the integrity of the network. The second deals with reducing internal risks by defining appropriate use of network resources.