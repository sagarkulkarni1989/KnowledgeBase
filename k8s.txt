Kubernetes 
Kubernetes is an open source container management tool which automates container deployment, container scaling and load balancing.
It schedules,runs and and manages isolated containers which are running on virtual/physical/Cloud Machines.
All top cloud providers support Kubernetes.
In 2014, Google introduced Kubernetes an open source platform written in Golang and later donated tp CNCF(Cloud Native Coumputing Foundation)

Online platform for K8s
Kubernetes playground
Play with k8s 
Play with Kubernetes classroom

Cloud based k8s services 
GKE(Google Kubernetes Services)
Amazon EKS (Elastic Kuberneters Services)
AKS Azure Kubernetes services

K8s installation tools 
Minicube 
Kubeadm 

Problem with scaling up the Containers 
1] Containers cannot Communicate with each other
2] Autoscaling and Load Balancing was not possible 
3] Containers had to be managed carefully

Features of Kubernetes 
1] Orchestration(Clustering of any no of containers running on different n/w)
2] Autoscaling <Vertical/ Horizontal>
3] Load Balancing 
4] Platform Independent(Cloud/Virtual/Physical)
5] Fault Tolerance (Node/POD failure)
6] Rollback(Going back to previous version)
7] Health Monitoring of Containers
8] Batch Execution (One time,sequencial,parallel)

Master -slave architecture 

Worfking with Kebernetes
We create manifest(.yml)
Apply this to cluster(to master) to bring onto desired state
pod runs on Node, which is controlled by master

Role of Manster Node 
Kubernetes cluster Containers running on Bare metal/VM instances/Cloud instances/ all mix
Kubrenetes designates one or more  of these as master and all others as workers.
The master is now going to run set of k8s processes. These processes we ensure smooth functioning of cluster. Thse processes are called "Control plane"

Componets of Control Plane 
1] Kube-api-server:(for all communication)
	This api-server interacts directly with user(i.e we apply .yml or Json manifest to kube-api-server)
	Thus kube-api-server is meant to scale automatically as per load 
	kube api-server is front end of control plane
2] etcd 
	etcd is consistent and high-availabe store(key-volume store)
	Source of touch for cluster state(info about state of cluster)
	Stores metadata and status of cluster
	
3] Kube-scheduler (Action)
	When users make request for the creation and management of pods, kube scheduler is going to the action on these requests
	Handles Pod creation and management
	Kube scheduler match/assign any node to create and run 
	A scheduler watches for newly created pods that have no node assigned for every pod that the scheduler discover, the scheduler becomes responsible for finding best node for that pod to run on.
4] Controller manager 
	make sure actual state of cluster matches to desired state.
	Two possible choises for controller Manager
		1] If k8s on cloud, then it will be Cloud-controller manager
		2] If k8s on non cloud then it will be kube controller manager
	Components on master that runs controller
		Node Controller : 
			For checking the cloud provider to determine if a node has been deleted in the cloud after it stops responding
		Route Controller
	
NODE : 
Node is going to run 3 imprtant piece of software
Kubelet 
	Agend running on he node
	Listen to kubernetes master(eg pod creation request)
	
Kube proxy : Assign IP to each Pod 
Kube proxy runs on each node and this make sure that each pod will get its own unique IP address

Container Engine 
Workes with kubelet 
pulling images 

POD : Smallest unit in kubernets 
Kubernetes only knows about PODs(does not know about indivitual containers)
Cannot start containers without a Pod
One POD usually contains one Container
A cluster is a group of nodes 
A cluster has atleast one worker node and master node 
Consists of one or more tightly coupled cotainers 

Multicontainer PODs 
	Share access to memory space 
	Connect to each other using localhost 
	Entire Pod is hosted on the same node

Higher level K8s Objects 
Replication Set: Scaling and healing 
Deployment : versioning and Rollback 
Service : static IP and networking 
Volume : Non ephemeral storage 

Important 
